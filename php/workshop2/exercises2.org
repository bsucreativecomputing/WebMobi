* Exercises for Workshop 2
** Exercise 10

Write an array variable of weather conditions with the following values: rain, sunshine, clouds, hail, sleet, snow, wind. Using the array variable for all the weather conditions, echo the following statement to the browser:

#+BEGIN_SRC php
"We've seen all kinds of weather this month. At the beginning of the month, we had snow and wind. Then came sunshine with a few clouds and some rain. At least we didn't get any hail or sleet."
#+END_SRC

Don't forget to include a title for your page, both in the header and on the page itself.

** Exercise 11

For this exercise, you will use a list of ten of the largest cities in the world. (Please note, these are not the ten largest, just a selection of ten from the largest cities.) Create an array with the following values: Tokyo, Mexico City, New York City, Mumbai, Seoul, Shanghai, Lagos, Buenos Aires, Cairo, London.

Print these values to the browser separated by commas, using a loop to iterate over the array. Sort the array, then print the values to the browser in an unordered list, again using a loop.

Add the following cities to the array: Los Angeles, Calcutta, Osaka, Beijing. Sort the array again, and print it once more to the browser in an unordered list.

** Exercise 12
You will again use the list of cities in Arrays Exercise 10. Here's the list, this time including countries as well as cities:

Tokyo, Japan; Mexico City, Mexico; New York City, USA; Mumbai, India; Seoul, Korea; Shanghai, China; Lagos, Nigeria; Buenos Aires, Argentina; Cairo, Egypt; London, England.

This time, create an associative array, using the countries as keys, the cities as values.

Create an array of country names. Loop through the array, using the names as keys to get the values from the associative array. Do this to print the following:

#+BEGIN_SRC php
"Tokyo is in Japan"
"Mexico City is in Mexico"
"New York City is in USA"
#+END_SRC

...etc

** Exercise 13

Create a function called "hello" that outputs that phrase we all know and love, "Hello, World!" to the browser. Call the function.

** Exercise 14
This PHP exercise has two parts. For the first, you will create a function to accept two arguments, perform a calculation using them, then return a sentence with the result to the browser.

The function will calculate the area of a rectangle, with the two arguments being width and height. (Reminder: area = width * height.) The sentence to be returned is "A rectangle of length $l and width $w has an area of $area.", where $l and $w are the arguments and $area is the result.

** Exercise 15
Rewrite the rectangle area function from #2 once again, this time to accept user input. Present a form to the user with the message "Please enter the values of the length and width of your rectangle." Below this, supply two text boxes, one for length and one for width. Using your function to process the user supplied values, return the result statement from the previous exercise to the user. Reminder: the statement was "A rectangle of length $l and width $w has an area of $area.", where $l and $w are the arguments and $area is the result.

** Exercise 16
First create an array called $months. Use the names of the months as keys, and the number of days for each month as values. For February, use the following for your value: "28 days, if leap year 29".

Next, write a function to create an option element for a form's select field. Make sure each option will be upper case. Both the array and the function should precede the HTML for the page.

Once again, you will be requesting user input. Create a form for the user with the request, "Please choose a month." Next, provide a select field with the months as options, looping through the array you created and using the function to create the option elements.

When the user clicks the submit button, return the statement "The month of $month has $number days.", where $month is the name of the month the user chose, and $number is the number of days. Be sure to include a different response for February.

#+BEGIN_SRC php
echo "Hello";
#+END_SRC

** Exercise 17
Create a form asking the user for input about the weather the user has experienced in a month of the user's choice. In separate text fields, request the city, month and year in question. Below that, show a series of checkboxes using the same weather conditions you used in Exercise 10. (Those values were: rain, sunshine, clouds, hail, sleet, snow, wind.) Set up the form to create an array from the checked items.

In the response section of your script, create an array using the city, month and year the user entered as values. Print the following response "In $city in the month of $month $year, you observed the following weather:", where $city, $month and $year are values from the array you created.

Next, loop through the $weather[] array you received from the user to send back a bulleted list with the user's responses.

** Exercise 18
Start with the script from Exercise 17 and write a function to create form checkbox elements from the arguments supplied. This function should be able to take a variable number of arguments so that you can create any number of checkboxes calling it only once. Add your function at the beginning of your file before the HTML. Make sure each item is upper case.

Now rewrite the original form presented to the user with the checkbox function. Make sure the list returned to the user in the second part of the script is also upper case.

** Exercise 18
Pull up your script from Exercise 16. The days of the month array is fine as it is. Rewrite the "option" function as "makeOptions", such that it includes all the work of creating the option. It will need to take an array as an argument and iterate over the array key values to produce the options.

Write a second function, "makeSelect", to create the entire select field. This function should call the "makeOptions" function to produce the options. Give the function an error checking action to assure that the variable used for options is actually an array.
